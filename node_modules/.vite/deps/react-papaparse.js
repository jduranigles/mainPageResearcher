import {
  require_react
} from "./chunk-HS5T2ZWL.js";
import {
  __commonJS,
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/papaparse/papaparse.min.js
var require_papaparse_min = __commonJS({
  "node_modules/papaparse/papaparse.min.js"(exports, module) {
    !function(e2, t2) {
      "function" == typeof define && define.amd ? define([], t2) : "object" == typeof module && "undefined" != typeof exports ? module.exports = t2() : e2.Papa = t2();
    }(exports, function s2() {
      "use strict";
      var f2 = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== f2 ? f2 : {};
      var n2 = !f2.document && !!f2.postMessage, o2 = f2.IS_PAPA_WORKER || false, a2 = {}, u2 = 0, b2 = { parse: function(e2, t2) {
        var r3 = (t2 = t2 || {}).dynamicTyping || false;
        J(r3) && (t2.dynamicTypingFunction = r3, r3 = {});
        if (t2.dynamicTyping = r3, t2.transform = !!J(t2.transform) && t2.transform, t2.worker && b2.WORKERS_SUPPORTED) {
          var i2 = function() {
            if (!b2.WORKERS_SUPPORTED)
              return false;
            var e3 = (r4 = f2.URL || f2.webkitURL || null, i3 = s2.toString(), b2.BLOB_URL || (b2.BLOB_URL = r4.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ", "(", i3, ")();"], { type: "text/javascript" })))), t3 = new f2.Worker(e3);
            var r4, i3;
            return t3.onmessage = _, t3.id = u2++, a2[t3.id] = t3;
          }();
          return i2.userStep = t2.step, i2.userChunk = t2.chunk, i2.userComplete = t2.complete, i2.userError = t2.error, t2.step = J(t2.step), t2.chunk = J(t2.chunk), t2.complete = J(t2.complete), t2.error = J(t2.error), delete t2.worker, void i2.postMessage({ input: e2, config: t2, workerId: i2.id });
        }
        var n3 = null;
        b2.NODE_STREAM_INPUT, "string" == typeof e2 ? (e2 = function(e3) {
          if (65279 === e3.charCodeAt(0))
            return e3.slice(1);
          return e3;
        }(e2), n3 = t2.download ? new l2(t2) : new p2(t2)) : true === e2.readable && J(e2.read) && J(e2.on) ? n3 = new g2(t2) : (f2.File && e2 instanceof File || e2 instanceof Object) && (n3 = new c2(t2));
        return n3.stream(e2);
      }, unparse: function(e2, t2) {
        var n3 = false, _2 = true, m3 = ",", y3 = "\r\n", s3 = '"', a3 = s3 + s3, r3 = false, i2 = null, o3 = false;
        !function() {
          if ("object" != typeof t2)
            return;
          "string" != typeof t2.delimiter || b2.BAD_DELIMITERS.filter(function(e3) {
            return -1 !== t2.delimiter.indexOf(e3);
          }).length || (m3 = t2.delimiter);
          ("boolean" == typeof t2.quotes || "function" == typeof t2.quotes || Array.isArray(t2.quotes)) && (n3 = t2.quotes);
          "boolean" != typeof t2.skipEmptyLines && "string" != typeof t2.skipEmptyLines || (r3 = t2.skipEmptyLines);
          "string" == typeof t2.newline && (y3 = t2.newline);
          "string" == typeof t2.quoteChar && (s3 = t2.quoteChar);
          "boolean" == typeof t2.header && (_2 = t2.header);
          if (Array.isArray(t2.columns)) {
            if (0 === t2.columns.length)
              throw new Error("Option columns is empty");
            i2 = t2.columns;
          }
          void 0 !== t2.escapeChar && (a3 = t2.escapeChar + s3);
          ("boolean" == typeof t2.escapeFormulae || t2.escapeFormulae instanceof RegExp) && (o3 = t2.escapeFormulae instanceof RegExp ? t2.escapeFormulae : /^[=+\-@\t\r].*$/);
        }();
        var u3 = new RegExp(Q(s3), "g");
        "string" == typeof e2 && (e2 = JSON.parse(e2));
        if (Array.isArray(e2)) {
          if (!e2.length || Array.isArray(e2[0]))
            return h3(null, e2, r3);
          if ("object" == typeof e2[0])
            return h3(i2 || Object.keys(e2[0]), e2, r3);
        } else if ("object" == typeof e2)
          return "string" == typeof e2.data && (e2.data = JSON.parse(e2.data)), Array.isArray(e2.data) && (e2.fields || (e2.fields = e2.meta && e2.meta.fields || i2), e2.fields || (e2.fields = Array.isArray(e2.data[0]) ? e2.fields : "object" == typeof e2.data[0] ? Object.keys(e2.data[0]) : []), Array.isArray(e2.data[0]) || "object" == typeof e2.data[0] || (e2.data = [e2.data])), h3(e2.fields || [], e2.data || [], r3);
        throw new Error("Unable to serialize unrecognized input");
        function h3(e3, t3, r4) {
          var i3 = "";
          "string" == typeof e3 && (e3 = JSON.parse(e3)), "string" == typeof t3 && (t3 = JSON.parse(t3));
          var n4 = Array.isArray(e3) && 0 < e3.length, s4 = !Array.isArray(t3[0]);
          if (n4 && _2) {
            for (var a4 = 0; a4 < e3.length; a4++)
              0 < a4 && (i3 += m3), i3 += v3(e3[a4], a4);
            0 < t3.length && (i3 += y3);
          }
          for (var o4 = 0; o4 < t3.length; o4++) {
            var u4 = n4 ? e3.length : t3[o4].length, h4 = false, f3 = n4 ? 0 === Object.keys(t3[o4]).length : 0 === t3[o4].length;
            if (r4 && !n4 && (h4 = "greedy" === r4 ? "" === t3[o4].join("").trim() : 1 === t3[o4].length && 0 === t3[o4][0].length), "greedy" === r4 && n4) {
              for (var d3 = [], l3 = 0; l3 < u4; l3++) {
                var c3 = s4 ? e3[l3] : l3;
                d3.push(t3[o4][c3]);
              }
              h4 = "" === d3.join("").trim();
            }
            if (!h4) {
              for (var p3 = 0; p3 < u4; p3++) {
                0 < p3 && !f3 && (i3 += m3);
                var g3 = n4 && s4 ? e3[p3] : p3;
                i3 += v3(t3[o4][g3], p3);
              }
              o4 < t3.length - 1 && (!r4 || 0 < u4 && !f3) && (i3 += y3);
            }
          }
          return i3;
        }
        function v3(e3, t3) {
          if (null == e3)
            return "";
          if (e3.constructor === Date)
            return JSON.stringify(e3).slice(1, 25);
          var r4 = false;
          o3 && "string" == typeof e3 && o3.test(e3) && (e3 = "'" + e3, r4 = true);
          var i3 = e3.toString().replace(u3, a3);
          return (r4 = r4 || true === n3 || "function" == typeof n3 && n3(e3, t3) || Array.isArray(n3) && n3[t3] || function(e4, t4) {
            for (var r5 = 0; r5 < t4.length; r5++)
              if (-1 < e4.indexOf(t4[r5]))
                return true;
            return false;
          }(i3, b2.BAD_DELIMITERS) || -1 < i3.indexOf(m3) || " " === i3.charAt(0) || " " === i3.charAt(i3.length - 1)) ? s3 + i3 + s3 : i3;
        }
      } };
      if (b2.RECORD_SEP = String.fromCharCode(30), b2.UNIT_SEP = String.fromCharCode(31), b2.BYTE_ORDER_MARK = "\uFEFF", b2.BAD_DELIMITERS = ["\r", "\n", '"', b2.BYTE_ORDER_MARK], b2.WORKERS_SUPPORTED = !n2 && !!f2.Worker, b2.NODE_STREAM_INPUT = 1, b2.LocalChunkSize = 10485760, b2.RemoteChunkSize = 5242880, b2.DefaultDelimiter = ",", b2.Parser = E2, b2.ParserHandle = r2, b2.NetworkStreamer = l2, b2.FileStreamer = c2, b2.StringStreamer = p2, b2.ReadableStreamStreamer = g2, f2.jQuery) {
        var d2 = f2.jQuery;
        d2.fn.parse = function(o3) {
          var r3 = o3.config || {}, u3 = [];
          return this.each(function(e3) {
            if (!("INPUT" === d2(this).prop("tagName").toUpperCase() && "file" === d2(this).attr("type").toLowerCase() && f2.FileReader) || !this.files || 0 === this.files.length)
              return true;
            for (var t2 = 0; t2 < this.files.length; t2++)
              u3.push({ file: this.files[t2], inputElem: this, instanceConfig: d2.extend({}, r3) });
          }), e2(), this;
          function e2() {
            if (0 !== u3.length) {
              var e3, t2, r4, i2, n3 = u3[0];
              if (J(o3.before)) {
                var s3 = o3.before(n3.file, n3.inputElem);
                if ("object" == typeof s3) {
                  if ("abort" === s3.action)
                    return e3 = "AbortError", t2 = n3.file, r4 = n3.inputElem, i2 = s3.reason, void (J(o3.error) && o3.error({ name: e3 }, t2, r4, i2));
                  if ("skip" === s3.action)
                    return void h3();
                  "object" == typeof s3.config && (n3.instanceConfig = d2.extend(n3.instanceConfig, s3.config));
                } else if ("skip" === s3)
                  return void h3();
              }
              var a3 = n3.instanceConfig.complete;
              n3.instanceConfig.complete = function(e4) {
                J(a3) && a3(e4, n3.file, n3.inputElem), h3();
              }, b2.parse(n3.file, n3.instanceConfig);
            } else
              J(o3.complete) && o3.complete();
          }
          function h3() {
            u3.splice(0, 1), e2();
          }
        };
      }
      function h2(e2) {
        this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, (function(e3) {
          var t2 = w(e3);
          t2.chunkSize = parseInt(t2.chunkSize), e3.step || e3.chunk || (t2.chunkSize = null);
          this._handle = new r2(t2), (this._handle.streamer = this)._config = t2;
        }).call(this, e2), this.parseChunk = function(e3, t2) {
          if (this.isFirstChunk && J(this._config.beforeFirstChunk)) {
            var r3 = this._config.beforeFirstChunk(e3);
            void 0 !== r3 && (e3 = r3);
          }
          this.isFirstChunk = false, this._halted = false;
          var i2 = this._partialLine + e3;
          this._partialLine = "";
          var n3 = this._handle.parse(i2, this._baseIndex, !this._finished);
          if (!this._handle.paused() && !this._handle.aborted()) {
            var s3 = n3.meta.cursor;
            this._finished || (this._partialLine = i2.substring(s3 - this._baseIndex), this._baseIndex = s3), n3 && n3.data && (this._rowCount += n3.data.length);
            var a3 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
            if (o2)
              f2.postMessage({ results: n3, workerId: b2.WORKER_ID, finished: a3 });
            else if (J(this._config.chunk) && !t2) {
              if (this._config.chunk(n3, this._handle), this._handle.paused() || this._handle.aborted())
                return void (this._halted = true);
              n3 = void 0, this._completeResults = void 0;
            }
            return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n3.data), this._completeResults.errors = this._completeResults.errors.concat(n3.errors), this._completeResults.meta = n3.meta), this._completed || !a3 || !J(this._config.complete) || n3 && n3.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), a3 || n3 && n3.meta.paused || this._nextChunk(), n3;
          }
          this._halted = true;
        }, this._sendError = function(e3) {
          J(this._config.error) ? this._config.error(e3) : o2 && this._config.error && f2.postMessage({ workerId: b2.WORKER_ID, error: e3, finished: false });
        };
      }
      function l2(e2) {
        var i2;
        (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.RemoteChunkSize), h2.call(this, e2), this._nextChunk = n2 ? function() {
          this._readChunk(), this._chunkLoaded();
        } : function() {
          this._readChunk();
        }, this.stream = function(e3) {
          this._input = e3, this._nextChunk();
        }, this._readChunk = function() {
          if (this._finished)
            this._chunkLoaded();
          else {
            if (i2 = new XMLHttpRequest(), this._config.withCredentials && (i2.withCredentials = this._config.withCredentials), n2 || (i2.onload = v2(this._chunkLoaded, this), i2.onerror = v2(this._chunkError, this)), i2.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n2), this._config.downloadRequestHeaders) {
              var e3 = this._config.downloadRequestHeaders;
              for (var t2 in e3)
                i2.setRequestHeader(t2, e3[t2]);
            }
            if (this._config.chunkSize) {
              var r3 = this._start + this._config.chunkSize - 1;
              i2.setRequestHeader("Range", "bytes=" + this._start + "-" + r3);
            }
            try {
              i2.send(this._config.downloadRequestBody);
            } catch (e4) {
              this._chunkError(e4.message);
            }
            n2 && 0 === i2.status && this._chunkError();
          }
        }, this._chunkLoaded = function() {
          4 === i2.readyState && (i2.status < 200 || 400 <= i2.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : i2.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e3) {
            var t2 = e3.getResponseHeader("Content-Range");
            if (null === t2)
              return -1;
            return parseInt(t2.substring(t2.lastIndexOf("/") + 1));
          }(i2), this.parseChunk(i2.responseText)));
        }, this._chunkError = function(e3) {
          var t2 = i2.statusText || e3;
          this._sendError(new Error(t2));
        };
      }
      function c2(e2) {
        var i2, n3;
        (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.LocalChunkSize), h2.call(this, e2);
        var s3 = "undefined" != typeof FileReader;
        this.stream = function(e3) {
          this._input = e3, n3 = e3.slice || e3.webkitSlice || e3.mozSlice, s3 ? ((i2 = new FileReader()).onload = v2(this._chunkLoaded, this), i2.onerror = v2(this._chunkError, this)) : i2 = new FileReaderSync(), this._nextChunk();
        }, this._nextChunk = function() {
          this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
        }, this._readChunk = function() {
          var e3 = this._input;
          if (this._config.chunkSize) {
            var t2 = Math.min(this._start + this._config.chunkSize, this._input.size);
            e3 = n3.call(e3, this._start, t2);
          }
          var r3 = i2.readAsText(e3, this._config.encoding);
          s3 || this._chunkLoaded({ target: { result: r3 } });
        }, this._chunkLoaded = function(e3) {
          this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e3.target.result);
        }, this._chunkError = function() {
          this._sendError(i2.error);
        };
      }
      function p2(e2) {
        var r3;
        h2.call(this, e2 = e2 || {}), this.stream = function(e3) {
          return r3 = e3, this._nextChunk();
        }, this._nextChunk = function() {
          if (!this._finished) {
            var e3, t2 = this._config.chunkSize;
            return t2 ? (e3 = r3.substring(0, t2), r3 = r3.substring(t2)) : (e3 = r3, r3 = ""), this._finished = !r3, this.parseChunk(e3);
          }
        };
      }
      function g2(e2) {
        h2.call(this, e2 = e2 || {});
        var t2 = [], r3 = true, i2 = false;
        this.pause = function() {
          h2.prototype.pause.apply(this, arguments), this._input.pause();
        }, this.resume = function() {
          h2.prototype.resume.apply(this, arguments), this._input.resume();
        }, this.stream = function(e3) {
          this._input = e3, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
        }, this._checkIsFinished = function() {
          i2 && 1 === t2.length && (this._finished = true);
        }, this._nextChunk = function() {
          this._checkIsFinished(), t2.length ? this.parseChunk(t2.shift()) : r3 = true;
        }, this._streamData = v2(function(e3) {
          try {
            t2.push("string" == typeof e3 ? e3 : e3.toString(this._config.encoding)), r3 && (r3 = false, this._checkIsFinished(), this.parseChunk(t2.shift()));
          } catch (e4) {
            this._streamError(e4);
          }
        }, this), this._streamError = v2(function(e3) {
          this._streamCleanUp(), this._sendError(e3);
        }, this), this._streamEnd = v2(function() {
          this._streamCleanUp(), i2 = true, this._streamData("");
        }, this), this._streamCleanUp = v2(function() {
          this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
        }, this);
      }
      function r2(m3) {
        var a3, o3, u3, i2 = Math.pow(2, 53), n3 = -i2, s3 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, h3 = /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/, t2 = this, r3 = 0, f3 = 0, d3 = false, e2 = false, l3 = [], c3 = { data: [], errors: [], meta: {} };
        if (J(m3.step)) {
          var p3 = m3.step;
          m3.step = function(e3) {
            if (c3 = e3, _2())
              g3();
            else {
              if (g3(), 0 === c3.data.length)
                return;
              r3 += e3.data.length, m3.preview && r3 > m3.preview ? o3.abort() : (c3.data = c3.data[0], p3(c3, t2));
            }
          };
        }
        function y3(e3) {
          return "greedy" === m3.skipEmptyLines ? "" === e3.join("").trim() : 1 === e3.length && 0 === e3[0].length;
        }
        function g3() {
          return c3 && u3 && (k("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + b2.DefaultDelimiter + "'"), u3 = false), m3.skipEmptyLines && (c3.data = c3.data.filter(function(e3) {
            return !y3(e3);
          })), _2() && function() {
            if (!c3)
              return;
            function e3(e4, t4) {
              J(m3.transformHeader) && (e4 = m3.transformHeader(e4, t4)), l3.push(e4);
            }
            if (Array.isArray(c3.data[0])) {
              for (var t3 = 0; _2() && t3 < c3.data.length; t3++)
                c3.data[t3].forEach(e3);
              c3.data.splice(0, 1);
            } else
              c3.data.forEach(e3);
          }(), function() {
            if (!c3 || !m3.header && !m3.dynamicTyping && !m3.transform)
              return c3;
            function e3(e4, t4) {
              var r4, i3 = m3.header ? {} : [];
              for (r4 = 0; r4 < e4.length; r4++) {
                var n4 = r4, s4 = e4[r4];
                m3.header && (n4 = r4 >= l3.length ? "__parsed_extra" : l3[r4]), m3.transform && (s4 = m3.transform(s4, n4)), s4 = v3(n4, s4), "__parsed_extra" === n4 ? (i3[n4] = i3[n4] || [], i3[n4].push(s4)) : i3[n4] = s4;
              }
              return m3.header && (r4 > l3.length ? k("FieldMismatch", "TooManyFields", "Too many fields: expected " + l3.length + " fields but parsed " + r4, f3 + t4) : r4 < l3.length && k("FieldMismatch", "TooFewFields", "Too few fields: expected " + l3.length + " fields but parsed " + r4, f3 + t4)), i3;
            }
            var t3 = 1;
            !c3.data.length || Array.isArray(c3.data[0]) ? (c3.data = c3.data.map(e3), t3 = c3.data.length) : c3.data = e3(c3.data, 0);
            m3.header && c3.meta && (c3.meta.fields = l3);
            return f3 += t3, c3;
          }();
        }
        function _2() {
          return m3.header && 0 === l3.length;
        }
        function v3(e3, t3) {
          return r4 = e3, m3.dynamicTypingFunction && void 0 === m3.dynamicTyping[r4] && (m3.dynamicTyping[r4] = m3.dynamicTypingFunction(r4)), true === (m3.dynamicTyping[r4] || m3.dynamicTyping) ? "true" === t3 || "TRUE" === t3 || "false" !== t3 && "FALSE" !== t3 && (function(e4) {
            if (s3.test(e4)) {
              var t4 = parseFloat(e4);
              if (n3 < t4 && t4 < i2)
                return true;
            }
            return false;
          }(t3) ? parseFloat(t3) : h3.test(t3) ? new Date(t3) : "" === t3 ? null : t3) : t3;
          var r4;
        }
        function k(e3, t3, r4, i3) {
          var n4 = { type: e3, code: t3, message: r4 };
          void 0 !== i3 && (n4.row = i3), c3.errors.push(n4);
        }
        this.parse = function(e3, t3, r4) {
          var i3 = m3.quoteChar || '"';
          if (m3.newline || (m3.newline = function(e4, t4) {
            e4 = e4.substring(0, 1048576);
            var r5 = new RegExp(Q(t4) + "([^]*?)" + Q(t4), "gm"), i4 = (e4 = e4.replace(r5, "")).split("\r"), n5 = e4.split("\n"), s5 = 1 < n5.length && n5[0].length < i4[0].length;
            if (1 === i4.length || s5)
              return "\n";
            for (var a4 = 0, o4 = 0; o4 < i4.length; o4++)
              "\n" === i4[o4][0] && a4++;
            return a4 >= i4.length / 2 ? "\r\n" : "\r";
          }(e3, i3)), u3 = false, m3.delimiter)
            J(m3.delimiter) && (m3.delimiter = m3.delimiter(e3), c3.meta.delimiter = m3.delimiter);
          else {
            var n4 = function(e4, t4, r5, i4, n5) {
              var s5, a4, o4, u4;
              n5 = n5 || [",", "	", "|", ";", b2.RECORD_SEP, b2.UNIT_SEP];
              for (var h4 = 0; h4 < n5.length; h4++) {
                var f4 = n5[h4], d4 = 0, l4 = 0, c4 = 0;
                o4 = void 0;
                for (var p4 = new E2({ comments: i4, delimiter: f4, newline: t4, preview: 10 }).parse(e4), g4 = 0; g4 < p4.data.length; g4++)
                  if (r5 && y3(p4.data[g4]))
                    c4++;
                  else {
                    var _3 = p4.data[g4].length;
                    l4 += _3, void 0 !== o4 ? 0 < _3 && (d4 += Math.abs(_3 - o4), o4 = _3) : o4 = _3;
                  }
                0 < p4.data.length && (l4 /= p4.data.length - c4), (void 0 === a4 || d4 <= a4) && (void 0 === u4 || u4 < l4) && 1.99 < l4 && (a4 = d4, s5 = f4, u4 = l4);
              }
              return { successful: !!(m3.delimiter = s5), bestDelimiter: s5 };
            }(e3, m3.newline, m3.skipEmptyLines, m3.comments, m3.delimitersToGuess);
            n4.successful ? m3.delimiter = n4.bestDelimiter : (u3 = true, m3.delimiter = b2.DefaultDelimiter), c3.meta.delimiter = m3.delimiter;
          }
          var s4 = w(m3);
          return m3.preview && m3.header && s4.preview++, a3 = e3, o3 = new E2(s4), c3 = o3.parse(a3, t3, r4), g3(), d3 ? { meta: { paused: true } } : c3 || { meta: { paused: false } };
        }, this.paused = function() {
          return d3;
        }, this.pause = function() {
          d3 = true, o3.abort(), a3 = J(m3.chunk) ? "" : a3.substring(o3.getCharIndex());
        }, this.resume = function() {
          t2.streamer._halted ? (d3 = false, t2.streamer.parseChunk(a3, true)) : setTimeout(t2.resume, 3);
        }, this.aborted = function() {
          return e2;
        }, this.abort = function() {
          e2 = true, o3.abort(), c3.meta.aborted = true, J(m3.complete) && m3.complete(c3), a3 = "";
        };
      }
      function Q(e2) {
        return e2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
      function E2(j) {
        var z, M = (j = j || {}).delimiter, P = j.newline, U = j.comments, q = j.step, N = j.preview, B2 = j.fastMode, K = z = void 0 === j.quoteChar || null === j.quoteChar ? '"' : j.quoteChar;
        if (void 0 !== j.escapeChar && (K = j.escapeChar), ("string" != typeof M || -1 < b2.BAD_DELIMITERS.indexOf(M)) && (M = ","), U === M)
          throw new Error("Comment character same as delimiter");
        true === U ? U = "#" : ("string" != typeof U || -1 < b2.BAD_DELIMITERS.indexOf(U)) && (U = false), "\n" !== P && "\r" !== P && "\r\n" !== P && (P = "\n");
        var W = 0, H = false;
        this.parse = function(i2, t2, r3) {
          if ("string" != typeof i2)
            throw new Error("Input must be a string");
          var n3 = i2.length, e2 = M.length, s3 = P.length, a3 = U.length, o3 = J(q), u3 = [], h3 = [], f3 = [], d3 = W = 0;
          if (!i2)
            return L();
          if (j.header && !t2) {
            var l3 = i2.split(P)[0].split(M), c3 = [], p3 = {}, g3 = false;
            for (var _2 in l3) {
              var m3 = l3[_2];
              J(j.transformHeader) && (m3 = j.transformHeader(m3, _2));
              var y3 = m3, v3 = p3[m3] || 0;
              for (0 < v3 && (g3 = true, y3 = m3 + "_" + v3), p3[m3] = v3 + 1; c3.includes(y3); )
                y3 = y3 + "_" + v3;
              c3.push(y3);
            }
            if (g3) {
              var k = i2.split(P);
              k[0] = c3.join(M), i2 = k.join(P);
            }
          }
          if (B2 || false !== B2 && -1 === i2.indexOf(z)) {
            for (var b3 = i2.split(P), E3 = 0; E3 < b3.length; E3++) {
              if (f3 = b3[E3], W += f3.length, E3 !== b3.length - 1)
                W += P.length;
              else if (r3)
                return L();
              if (!U || f3.substring(0, a3) !== U) {
                if (o3) {
                  if (u3 = [], I(f3.split(M)), F(), H)
                    return L();
                } else
                  I(f3.split(M));
                if (N && N <= E3)
                  return u3 = u3.slice(0, N), L(true);
              }
            }
            return L();
          }
          for (var w2 = i2.indexOf(M, W), R2 = i2.indexOf(P, W), C2 = new RegExp(Q(K) + Q(z), "g"), S = i2.indexOf(z, W); ; )
            if (i2[W] !== z)
              if (U && 0 === f3.length && i2.substring(W, W + a3) === U) {
                if (-1 === R2)
                  return L();
                W = R2 + s3, R2 = i2.indexOf(P, W), w2 = i2.indexOf(M, W);
              } else if (-1 !== w2 && (w2 < R2 || -1 === R2))
                f3.push(i2.substring(W, w2)), W = w2 + e2, w2 = i2.indexOf(M, W);
              else {
                if (-1 === R2)
                  break;
                if (f3.push(i2.substring(W, R2)), D(R2 + s3), o3 && (F(), H))
                  return L();
                if (N && u3.length >= N)
                  return L(true);
              }
            else
              for (S = W, W++; ; ) {
                if (-1 === (S = i2.indexOf(z, S + 1)))
                  return r3 || h3.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: u3.length, index: W }), T();
                if (S === n3 - 1)
                  return T(i2.substring(W, S).replace(C2, z));
                if (z !== K || i2[S + 1] !== K) {
                  if (z === K || 0 === S || i2[S - 1] !== K) {
                    -1 !== w2 && w2 < S + 1 && (w2 = i2.indexOf(M, S + 1)), -1 !== R2 && R2 < S + 1 && (R2 = i2.indexOf(P, S + 1));
                    var O = A(-1 === R2 ? w2 : Math.min(w2, R2));
                    if (i2.substr(S + 1 + O, e2) === M) {
                      f3.push(i2.substring(W, S).replace(C2, z)), i2[W = S + 1 + O + e2] !== z && (S = i2.indexOf(z, W)), w2 = i2.indexOf(M, W), R2 = i2.indexOf(P, W);
                      break;
                    }
                    var x = A(R2);
                    if (i2.substring(S + 1 + x, S + 1 + x + s3) === P) {
                      if (f3.push(i2.substring(W, S).replace(C2, z)), D(S + 1 + x + s3), w2 = i2.indexOf(M, W), S = i2.indexOf(z, W), o3 && (F(), H))
                        return L();
                      if (N && u3.length >= N)
                        return L(true);
                      break;
                    }
                    h3.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: u3.length, index: W }), S++;
                  }
                } else
                  S++;
              }
          return T();
          function I(e3) {
            u3.push(e3), d3 = W;
          }
          function A(e3) {
            var t3 = 0;
            if (-1 !== e3) {
              var r4 = i2.substring(S + 1, e3);
              r4 && "" === r4.trim() && (t3 = r4.length);
            }
            return t3;
          }
          function T(e3) {
            return r3 || (void 0 === e3 && (e3 = i2.substring(W)), f3.push(e3), W = n3, I(f3), o3 && F()), L();
          }
          function D(e3) {
            W = e3, I(f3), f3 = [], R2 = i2.indexOf(P, W);
          }
          function L(e3) {
            return { data: u3, errors: h3, meta: { delimiter: M, linebreak: P, aborted: H, truncated: !!e3, cursor: d3 + (t2 || 0) } };
          }
          function F() {
            q(L()), u3 = [], h3 = [];
          }
        }, this.abort = function() {
          H = true;
        }, this.getCharIndex = function() {
          return W;
        };
      }
      function _(e2) {
        var t2 = e2.data, r3 = a2[t2.workerId], i2 = false;
        if (t2.error)
          r3.userError(t2.error, t2.file);
        else if (t2.results && t2.results.data) {
          var n3 = { abort: function() {
            i2 = true, m2(t2.workerId, { data: [], errors: [], meta: { aborted: true } });
          }, pause: y2, resume: y2 };
          if (J(r3.userStep)) {
            for (var s3 = 0; s3 < t2.results.data.length && (r3.userStep({ data: t2.results.data[s3], errors: t2.results.errors, meta: t2.results.meta }, n3), !i2); s3++)
              ;
            delete t2.results;
          } else
            J(r3.userChunk) && (r3.userChunk(t2.results, n3, t2.file), delete t2.results);
        }
        t2.finished && !i2 && m2(t2.workerId, t2.results);
      }
      function m2(e2, t2) {
        var r3 = a2[e2];
        J(r3.userComplete) && r3.userComplete(t2), r3.terminate(), delete a2[e2];
      }
      function y2() {
        throw new Error("Not implemented.");
      }
      function w(e2) {
        if ("object" != typeof e2 || null === e2)
          return e2;
        var t2 = Array.isArray(e2) ? [] : {};
        for (var r3 in e2)
          t2[r3] = w(e2[r3]);
        return t2;
      }
      function v2(e2, t2) {
        return function() {
          e2.apply(t2, arguments);
        };
      }
      function J(e2) {
        return "function" == typeof e2;
      }
      return o2 && (f2.onmessage = function(e2) {
        var t2 = e2.data;
        void 0 === b2.WORKER_ID && t2 && (b2.WORKER_ID = t2.workerId);
        if ("string" == typeof t2.input)
          f2.postMessage({ workerId: b2.WORKER_ID, results: b2.parse(t2.input, t2.config), finished: true });
        else if (f2.File && t2.input instanceof File || t2.input instanceof Object) {
          var r3 = b2.parse(t2.input, t2.config);
          r3 && f2.postMessage({ workerId: b2.WORKER_ID, results: r3, finished: true });
        }
      }), (l2.prototype = Object.create(h2.prototype)).constructor = l2, (c2.prototype = Object.create(h2.prototype)).constructor = c2, (p2.prototype = Object.create(p2.prototype)).constructor = p2, (g2.prototype = Object.create(h2.prototype)).constructor = g2, b2;
    });
  }
});

// node_modules/react-papaparse/dist/react-papaparse.es.js
var import_papaparse = __toESM(require_papaparse_min());
var import_react = __toESM(require_react());
var o = function(e2, r2) {
  return o = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, r3) {
    e3.__proto__ = r3;
  } || function(e3, r3) {
    for (var o2 in r3)
      Object.prototype.hasOwnProperty.call(r3, o2) && (e3[o2] = r3[o2]);
  }, o(e2, r2);
};
function t(e2, r2) {
  if ("function" != typeof r2 && null !== r2)
    throw new TypeError("Class extends value " + String(r2) + " is not a constructor or null");
  function t2() {
    this.constructor = e2;
  }
  o(e2, r2), e2.prototype = null === r2 ? Object.create(r2) : (t2.prototype = r2.prototype, new t2());
}
function n(e2, r2) {
  for (var o2 = 0, t2 = r2.length, n2 = e2.length; o2 < t2; o2++, n2++)
    e2[n2] = r2[o2];
  return e2;
}
function i(e2) {
  var r2 = 1024, o2 = 1048576, t2 = 1073741824;
  if (e2 < o2) {
    var n2 = Number((e2 / r2).toFixed(0));
    return n2 <= 0 ? e2 + " B" : n2 + " KB";
  }
  return e2 < t2 ? (e2 / o2).toFixed(0) + " MB" : e2 < 1099511627776 ? (e2 / t2).toFixed(0) + " GB" : "";
}
function l(e2, r2) {
  var o2 = false;
  "#" == e2[0] && (e2 = e2.slice(1), o2 = true);
  var t2 = parseInt(e2, 16), n2 = (t2 >> 16) + r2;
  n2 > 255 ? n2 = 255 : n2 < 0 && (n2 = 0);
  var i2 = (t2 >> 8 & 255) + r2;
  i2 > 255 ? i2 = 255 : i2 < 0 && (i2 = 0);
  var l2 = (255 & t2) + r2;
  return l2 > 255 ? l2 = 255 : l2 < 0 && (l2 = 0), (o2 ? "#" : "") + (l2 | i2 << 8 | n2 << 16).toString(16);
}
function a(e2) {
  return import_react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "23", height: "23", viewBox: "0 0 512 512" }, import_react.default.createElement("path", { fill: e2.color, d: "M504.1 256C504.1 119 393 7.9 256 7.9S7.9 119 7.9 256 119 504.1 256 504.1 504.1 393 504.1 256z" }), import_react.default.createElement("path", { fill: "#FFF", d: "M285 256l72.5-84.2c7.9-9.2 6.9-23-2.3-31-9.2-7.9-23-6.9-30.9 2.3L256 222.4l-68.2-79.2c-7.9-9.2-21.8-10.2-31-2.3-9.2 7.9-10.2 21.8-2.3 31L227 256l-72.5 84.2c-7.9 9.2-6.9 23 2.3 31 4.1 3.6 9.2 5.3 14.3 5.3 6.2 0 12.3-2.6 16.6-7.6l68.2-79.2 68.2 79.2c4.3 5 10.5 7.6 16.6 7.6 5.1 0 10.2-1.7 14.3-5.3 9.2-7.9 10.2-21.8 2.3-31L285 256z" }));
}
var s = { progressBar: { borderRadius: 3, boxShadow: "inset 0 1px 3px rgba(0, 0, 0, .2)", bottom: 14, position: "absolute", width: "80%" }, buttonProgressBar: { position: "inherit", width: "100%" }, progressBarFill: { backgroundColor: "#659cef", borderRadius: 3, height: 10, transition: "width 500ms ease-in-out" } };
var d = function(e2) {
  function o2() {
    return null !== e2 && e2.apply(this, arguments) || this;
  }
  return t(o2, e2), o2.prototype.render = function() {
    var e3 = this.props, o3 = e3.style, t2 = e3.progressBar, n2 = e3.displayProgressBarStatus, i2 = e3.isButtonProgressBar;
    return import_react.default.createElement("div", { style: Object.assign({}, s.progressBar, i2 && s.buttonProgressBar) }, import_react.default.createElement("span", { style: Object.assign({}, s.progressBarFill, o3, { width: "".concat(t2, "%"), display: n2 }) }));
  }, o2;
}(import_react.default.Component);
var u = { dropArea: { alignItems: "center", borderStyle: "dashed", borderWidth: 2, borderRadius: 20, borderColor: "#CCC", display: "flex", flexDirection: "column", height: "100%", justifyContent: "center", padding: 20 }, dropAreaDefaultBorderColor: { borderColor: "#CCC" }, inputFile: { display: "none" }, highlight: { borderColor: "#686868" }, unhighlight: { borderColor: "#CCC" }, dropFile: { background: "linear-gradient(to bottom, #EEE, #DDD)", borderRadius: 20, display: "block", height: 120, width: 100, paddingLeft: 10, paddingRight: 10, position: "relative", zIndex: 10 }, column: { alignItems: "center", display: "flex", flexDirection: "column", justifyContent: "center" }, fileSizeInfo: { backgroundColor: "rgba(255, 255, 255, 0.4)", borderRadius: 3, lineHeight: 1, marginBottom: "0.5em", padding: "0 0.4em" }, fileNameInfo: { backgroundColor: "rgba(255, 255, 255, 0.4)", borderRadius: 3, fontSize: 14, lineHeight: 1, padding: "0 0.4em" }, defaultCursor: { cursor: "default" }, pointerCursor: { cursor: "pointer" }, dropFileRemoveButton: { height: 23, position: "absolute", right: 6, top: 6, width: 23 } };
var p = function(o2) {
  function s2() {
    var t2, s3, d2, p2, c2, v2, f2, g2, h2, m2 = o2.apply(this, arguments) || this;
    return m2.inputFileRef = import_react.default.createRef(), m2.dropAreaRef = import_react.default.createRef(), m2.fileSizeInfoRef = import_react.default.createRef(), m2.fileNameInfoRef = import_react.default.createRef(), m2.REMOVE_ICON_COLOR = m2.props.removeButtonColor || (null === (p2 = null === (d2 = null === (s3 = null === (t2 = m2.props.style) || void 0 === t2 ? void 0 : t2.dropArea) || void 0 === s3 ? void 0 : s3.dropFile) || void 0 === d2 ? void 0 : d2.removeButton) || void 0 === p2 ? void 0 : p2.color) || (null === (f2 = null === (v2 = null === (c2 = m2.props.style) || void 0 === c2 ? void 0 : c2.dropFile) || void 0 === v2 ? void 0 : v2.removeButton) || void 0 === f2 ? void 0 : f2.color) || (null === (h2 = null === (g2 = m2.props.style) || void 0 === g2 ? void 0 : g2.removeButton) || void 0 === h2 ? void 0 : h2.color) || "#A01919", m2.REMOVE_ICON_COLOR_LIGHT = l(m2.REMOVE_ICON_COLOR, 40), m2.state = { dropAreaCustom: {}, progressBar: 0, displayProgressBarStatus: "none", file: null, timeout: null, files: null, removeIconColor: m2.REMOVE_ICON_COLOR, isCanceled: false }, m2.componentDidUpdate = function(e2) {
      m2.props.isReset !== e2.isReset && m2.removeFile();
    }, m2.componentDidMount = function() {
      var e2 = m2.dropAreaRef.current;
      if (e2) {
        if (["dragenter", "dragover", "dragleave", "drop"].forEach(function(r2) {
          e2.addEventListener(r2, m2.preventDefaults, false);
        }), !m2.props.noDrag) {
          ["dragenter", "dragover"].forEach(function(r2) {
            e2.addEventListener(r2, m2.highlight, false);
          }), e2.addEventListener("dragleave", m2.unhighlight, false), e2.addEventListener("drop", m2.unhighlight, false), e2.addEventListener("drop", m2.visibleProgressBar, false), e2.addEventListener("drop", m2.handleDrop, false);
        }
      }
    }, m2.componentWillUnmount = function() {
      var e2 = m2.dropAreaRef.current;
      if (["dragenter", "dragover", "dragleave", "drop"].forEach(function(r2) {
        e2.removeEventListener(r2, m2.preventDefaults, false);
      }), !m2.props.noDrag) {
        ["dragenter", "dragover"].forEach(function(r2) {
          e2.removeEventListener(r2, m2.highlight, false);
        }), e2.removeEventListener("dragleave", m2.unhighlight, false), e2.removeEventListener("drop", m2.unhighlight, false), e2.removeEventListener("drop", m2.visibleProgressBar, false), e2.removeEventListener("drop", m2.handleDrop, false);
      }
    }, m2.preventDefaults = function(e2) {
      e2.preventDefault(), e2.stopPropagation();
    }, m2.highlight = function() {
      var e2, r2, o3, t3, n2 = m2.props.style;
      m2.setState({ dropAreaCustom: Object.assign({}, (null == n2 ? void 0 : n2.dropAreaActive) ? (null == n2 ? void 0 : n2.dropAreaActive.borderColor) ? null == n2 ? void 0 : n2.dropAreaActive : Object.assign({}, null == n2 ? void 0 : n2.dropAreaActive, u.highlight) : (null === (e2 = null == n2 ? void 0 : n2.dropArea) || void 0 === e2 ? void 0 : e2.dropAreaActive) ? (null === (r2 = null == n2 ? void 0 : n2.dropArea) || void 0 === r2 ? void 0 : r2.dropAreaActive.borderColor) ? null === (o3 = null == n2 ? void 0 : n2.dropArea) || void 0 === o3 ? void 0 : o3.dropAreaActive : Object.assign({}, null === (t3 = null == n2 ? void 0 : n2.dropArea) || void 0 === t3 ? void 0 : t3.dropAreaActive, u.highlight) : u.highlight) }), m2.setState({ progressBar: 0 });
    }, m2.unhighlight = function() {
      var e2, r2;
      m2.setState({ dropAreaCustom: Object.assign({}, (null === (r2 = null === (e2 = m2.props.style) || void 0 === e2 ? void 0 : e2.dropArea) || void 0 === r2 ? void 0 : r2.borderColor) ? {} : u.dropAreaDefaultBorderColor) });
    }, m2.visibleProgressBar = function() {
      m2.props.noProgressBar || m2.setState({ displayProgressBarStatus: "block" });
    }, m2.handleDrop = function(e2) {
      var r2 = null, o3 = false;
      void 0 === e2.files ? r2 = e2.dataTransfer.files : r2 = e2.files;
      0 === r2.length && (r2 = m2.state.files, o3 = true), m2.setState({ files: r2, isCanceled: o3 }, function() {
        m2.handleFiles();
      });
    }, m2.handleFiles = function() {
      m2.setState({ progressBar: 0 });
      n([], m2.state.files).forEach(m2.uploadFile);
    }, m2.uploadFile = function(r2) {
      m2.displayFileInfo(r2), m2.setState({ file: r2 });
      var o3 = m2.props, t3 = o3.onDrop, n2 = o3.onFileLoad, i2 = o3.onError, l2 = o3.config, a2 = void 0 === l2 ? {} : l2, s4 = new window.FileReader(), d3 = {}, u2 = r2.size, p3 = [], c3 = 0;
      if (t3 || n2) {
        var v3 = m2;
        d3 = Object.assign({ complete: (null == a2 ? void 0 : a2.complete) || (null == a2 ? void 0 : a2.step) ? a2.complete : function() {
          !t3 && n2 ? n2(p3, r2) : t3 && !n2 && t3(p3, r2);
        }, step: (null == a2 ? void 0 : a2.step) ? a2.step : function(e2) {
          if (p3.push(e2), a2 && a2.preview)
            c3 = Math.round(p3.length / a2.preview * 100), v3.setState({ progressBar: c3 }), p3.length === a2.preview && (!t3 && n2 ? n2(p3, r2) : t3 && !n2 && t3(p3, r2));
          else {
            var o4 = e2.meta.cursor, i3 = Math.round(o4 / u2 * 100);
            if (i3 === c3)
              return;
            c3 = i3;
          }
          v3.setState({ progressBar: c3 });
        } }, d3);
      }
      i2 && (d3 = Object.assign({ error: i2 }, d3)), a2 && (d3 = Object.assign({}, a2, d3)), s4.onload = function(r3) {
        import_papaparse.default.parse(r3.target.result, d3);
      }, m2.props.noProgressBar || (s4.onloadend = function() {
        clearTimeout(m2.state.timeout), m2.setState({ timeout: setTimeout(function() {
          m2.disableProgressBar();
        }, 2e3) });
      }), s4.readAsText(r2, a2.encoding || "utf-8");
    }, m2.displayFileInfo = function(e2) {
      m2.childrenIsFunction() || (m2.fileSizeInfoRef.current.innerHTML = i(e2.size), m2.fileNameInfoRef.current.innerHTML = e2.name);
    }, m2.disableProgressBar = function() {
      m2.props.noProgressBar || m2.setState({ displayProgressBarStatus: "none" });
    }, m2.childrenIsFunction = function() {
      return "function" == typeof m2.props.children;
    }, m2.fileChange = function(e2) {
      var r2 = e2.target;
      m2.props.noProgressBar ? m2.handleDrop(r2) : m2.setState({ displayProgressBarStatus: "block" }, function() {
        m2.handleDrop(r2);
      });
    }, m2.open = function(e2) {
      var r2 = m2.state.displayProgressBarStatus;
      e2 && "none" === r2 && (m2.preventDefaults(e2), m2.inputFileRef.current.value = null, m2.inputFileRef.current.click());
    }, m2.renderChildren = function() {
      var e2 = m2.props.children, r2 = m2.state, o3 = r2.file, t3 = r2.progressBar;
      return m2.childrenIsFunction() ? e2({ file: o3, progressBar: t3 }) : e2;
    }, m2.handleRemoveFile = function(e2) {
      e2 && (e2.stopPropagation(), m2.removeFile());
    }, m2.removeFile = function() {
      m2.setState({ files: null, file: null });
      var e2 = m2.props.onRemoveFile;
      e2 && e2(null), m2.inputFileRef.current.value = null;
    }, m2.changeRemoveIconColor = function(e2) {
      e2 && m2.setState({ removeIconColor: e2 });
    }, m2.renderDropFileRemoveButton = function() {
      var e2 = m2.props.addRemoveButton, o3 = m2.state, t3 = o3.removeIconColor, n2 = o3.displayProgressBarStatus;
      return e2 && "none" === n2 ? import_react.default.createElement("div", { style: u.dropFileRemoveButton, onClick: function(e3) {
        return m2.handleRemoveFile(e3);
      }, onMouseOver: function() {
        return m2.changeRemoveIconColor(m2.REMOVE_ICON_COLOR_LIGHT);
      }, onMouseOut: function() {
        return m2.changeRemoveIconColor(m2.REMOVE_ICON_COLOR);
      } }, import_react.default.createElement(a, { color: t3 })) : e2 ? import_react.default.createElement("div", { style: u.dropFileRemoveButton }, import_react.default.createElement(a, { color: m2.REMOVE_ICON_COLOR })) : null;
    }, m2;
  }
  return t(s2, o2), s2.prototype.render = function() {
    var e2, o3, t2, n2, i2, l2, a2, s3, p2, c2, v2, f2, g2, h2 = this, m2 = this.props, C2 = m2.style, B2 = m2.noClick, b2 = m2.children, E2 = m2.noProgressBar, R2 = m2.progressBarColor, y2 = m2.accept, O = this.state, F = O.dropAreaCustom, A = O.files, S = O.isCanceled, I = O.progressBar, P = O.displayProgressBarStatus;
    return import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("input", { type: "file", accept: y2 || "text/csv, .csv, application/vnd.ms-excel", ref: this.inputFileRef, style: u.inputFile, onChange: function(e3) {
      return h2.fileChange(e3);
    } }), this.childrenIsFunction() ? import_react.default.createElement("div", { ref: this.dropAreaRef }, this.renderChildren(), A && A.length > 0 && !S && !E2 && import_react.default.createElement(d, { style: Object.assign({}, R2 ? { backgroundColor: R2 } : {}, (null === (f2 = null === (v2 = null == C2 ? void 0 : C2.dropArea) || void 0 === v2 ? void 0 : v2.dropFile) || void 0 === f2 ? void 0 : f2.progressBar) || (null === (g2 = null == C2 ? void 0 : C2.dropFile) || void 0 === g2 ? void 0 : g2.progressBar) || (null == C2 ? void 0 : C2.progressBar)), progressBar: I, displayProgressBarStatus: P, isButtonProgressBar: true })) : import_react.default.createElement("div", { ref: this.dropAreaRef, style: Object.assign({}, u.dropArea, null == C2 ? void 0 : C2.dropArea, F, void 0 !== B2 || "block" === P ? u.defaultCursor : u.pointerCursor), onClick: function(e3) {
      B2 || h2.open(e3);
    } }, A && A.length > 0 ? import_react.default.createElement("div", { style: Object.assign({}, u.dropFile, u.column, (null === (e2 = null == C2 ? void 0 : C2.dropArea) || void 0 === e2 ? void 0 : e2.dropFile) || (null == C2 ? void 0 : C2.dropFile)) }, this.renderDropFileRemoveButton(), import_react.default.createElement("div", { style: u.column }, import_react.default.createElement("span", { style: Object.assign({}, u.fileSizeInfo, (null === (t2 = null === (o3 = null == C2 ? void 0 : C2.dropArea) || void 0 === o3 ? void 0 : o3.dropFile) || void 0 === t2 ? void 0 : t2.fileSizeInfo) || (null === (n2 = null == C2 ? void 0 : C2.dropArea) || void 0 === n2 ? void 0 : n2.fileSizeInfo) || (null == C2 ? void 0 : C2.fileSizeInfo)), ref: this.fileSizeInfoRef }), import_react.default.createElement("span", { style: Object.assign({}, u.fileNameInfo, (null === (l2 = null === (i2 = null == C2 ? void 0 : C2.dropArea) || void 0 === i2 ? void 0 : i2.dropFile) || void 0 === l2 ? void 0 : l2.fileNameInfo) || (null === (a2 = null == C2 ? void 0 : C2.dropFile) || void 0 === a2 ? void 0 : a2.fileNameInfo) || (null == C2 ? void 0 : C2.fileNameInfo)), ref: this.fileNameInfoRef })), A && A.length > 0 && !S && !E2 && import_react.default.createElement(d, { style: Object.assign({}, R2 ? { backgroundColor: R2 } : {}, (null === (p2 = null === (s3 = null == C2 ? void 0 : C2.dropArea) || void 0 === s3 ? void 0 : s3.dropFile) || void 0 === p2 ? void 0 : p2.progressBar) || (null === (c2 = null == C2 ? void 0 : C2.dropFile) || void 0 === c2 ? void 0 : c2.progressBar) || (null == C2 ? void 0 : C2.progressBar)), progressBar: I, displayProgressBarStatus: P })) : b2));
  }, s2.defaultProps = { isReset: false }, s2;
}(import_react.default.Component);
var c = "link";
var v = "button";
var f = function(o2) {
  function n2() {
    var r2 = null !== o2 && o2.apply(this, arguments) || this;
    return r2.download = function(r3, o3, t2, n3) {
      var i2 = t2 ? "\uFEFF" : "", l2 = null, a2 = null;
      "function" == typeof r3 && (r3 = r3()), l2 = "object" == typeof r3 ? import_papaparse.default.unparse(r3, n3) : r3;
      var s2 = new Blob(["".concat(i2).concat(l2)], { type: "text/csv;charset=utf-8;" }), d2 = window.navigator;
      a2 = d2.msSaveBlob ? d2.msSaveBlob(s2, "".concat(o3, ".csv")) : window.URL.createObjectURL(s2);
      var u2 = document.createElement("a");
      u2.href = a2, u2.setAttribute("download", "".concat(o3, ".csv")), u2.click(), u2.remove();
    }, r2;
  }
  return t(n2, o2), n2.prototype.render = function() {
    var e2 = this, o3 = this.props, t2 = o3.children, n3 = o3.data, i2 = o3.filename, l2 = o3.type, a2 = o3.className, s2 = o3.style, d2 = o3.bom, u2 = void 0 !== d2 && d2, p2 = o3.config, c2 = void 0 === p2 ? {} : p2;
    return "link" === l2 ? import_react.default.createElement("a", { onClick: function() {
      return e2.download(n3, i2, u2, c2);
    }, className: a2, style: s2 }, t2) : import_react.default.createElement("button", { onClick: function() {
      return e2.download(n3, i2, u2, c2);
    }, className: a2, style: s2 }, t2);
  }, n2.defaultProps = { type: "link" }, n2;
}(import_react.default.Component);
function g(r2, o2) {
  return import_papaparse.default.parse(r2, o2);
}
function h(r2, o2) {
  import_papaparse.default.parse(r2, Object.assign({}, { download: true }, o2));
}
function m(r2, o2) {
  return void 0 === o2 && (o2 = {}), import_papaparse.default.unparse(r2, o2);
}
var C = import_papaparse.default.BAD_DELIMITERS;
var B = import_papaparse.default.RECORD_SEP;
var b = import_papaparse.default.UNIT_SEP;
var E = import_papaparse.default.WORKERS_SUPPORTED;
var R = import_papaparse.default.LocalChunkSize;
var y = import_papaparse.default.DefaultDelimiter;
export {
  C as BAD_DELIMITERS,
  v as BUTTON_TYPE,
  f as CSVDownloader,
  p as CSVReader,
  y as DefaultDelimiter,
  c as LINK_TYPE,
  R as LocalChunkSize,
  B as RECORD_SEP,
  b as UNIT_SEP,
  E as WORKERS_SUPPORTED,
  m as jsonToCSV,
  h as readRemoteFile,
  g as readString
};
/*! Bundled license information:

papaparse/papaparse.min.js:
  (* @license
  Papa Parse
  v5.4.1
  https://github.com/mholt/PapaParse
  License: MIT
  *)

react-papaparse/dist/react-papaparse.es.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=react-papaparse.js.map
